(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{174:function(e,a,t){"use strict";t.d(a,"a",(function(){return d}));var n=t(0),r=t.n(n);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),u=function(e){var a=r.a.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},s=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=u(t),d=n,b=s["".concat(l,".").concat(d)]||s[d]||m[d]||i;return t?r.a.createElement(b,c(c({ref:a},p),{},{components:t})):r.a.createElement(b,c({ref:a},p))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=s;var c={};for(var o in a)hasOwnProperty.call(a,o)&&(c[o]=a[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var p=2;p<i;p++)l[p]=t[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},99:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return l})),t.d(a,"metadata",(function(){return c})),t.d(a,"toc",(function(){return o})),t.d(a,"default",(function(){return u}));var n=t(3),r=t(7),i=(t(0),t(174)),l={},c={unversionedId:"app.utilFunctions",id:"app.utilFunctions",isDocsHomePage:!1,title:"app.utilFunctions",description:"This object contains utility functions to speed up the development",source:"@site/docs/app.utilFunctions.md",slug:"/app.utilFunctions",permalink:"/docs/app.utilFunctions",version:"current",sidebar:"docs",previous:{title:"app.xmlToJSON",permalink:"/docs/app.xmlToJSON"},next:{title:"app.translate",permalink:"/docs/app.translate"}},o=[{value:"Methods",id:"methods",children:[]},{value:"emailValidator",id:"emailvalidator",children:[{value:"Syntax",id:"syntax",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Return Value | <code>array</code>",id:"return-value--array",children:[]},{value:"Example",id:"example-2",children:[]}]},{value:"mobileNumValidator",id:"mobilenumvalidator",children:[{value:"Syntax",id:"syntax-1",children:[]},{value:"Parameters",id:"parameters-1",children:[]},{value:"Return Value | <code>array</code>",id:"return-value--array-1",children:[]},{value:"Example",id:"example-5",children:[]}]},{value:"pinCodeValidator",id:"pincodevalidator",children:[{value:"Syntax",id:"syntax-2",children:[]},{value:"Parameters",id:"parameters-2",children:[]},{value:"Return Value | <code>array</code>",id:"return-value--array-2",children:[]},{value:"Example",id:"example-8",children:[]}]}],p={toc:o};function u(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},p,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"This object contains utility functions to speed up the development\nprocess like ",Object(i.a)("inlineCode",{parentName:"p"},"emailValidator"),", ",Object(i.a)("inlineCode",{parentName:"p"},"pinCodeValidator"),", and\n",Object(i.a)("inlineCode",{parentName:"p"},"mobileNumValidator")),Object(i.a)("h2",{id:"methods"},"Methods"),Object(i.a)("h2",{id:"emailvalidator"},"emailValidator"),Object(i.a)("p",null,"This method validates the given string for any valid emails are present\nor not. If valid emails are present it returns the matched emails array\notherwise it returns an empty array."),Object(i.a)("h3",{id:"syntax"},"Syntax"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"app.utilFunctions.emailValidator(emailString)\n")),Object(i.a)("h3",{id:"parameters"},"Parameters"),Object(i.a)("h4",{id:"emailstring--string"},"emailString ","|"," ",Object(i.a)("inlineCode",{parentName:"h4"},"string")),Object(i.a)("p",null,"A string to test it contains any valid emails"),Object(i.a)("h4",{id:"example"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"example@example.com\n")),Object(i.a)("h3",{id:"return-value--array"},"Return Value ","|"," ",Object(i.a)("inlineCode",{parentName:"h3"},"array")),Object(i.a)("p",null,"If valid emails are present it returns the matched emails array\notherwise it returns an empty array."),Object(i.a)("h4",{id:"example-1"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'[\n  "example@example.com"\n]\nor\n[] //if emails not matched\n')),Object(i.a)("h3",{id:"example-2"},"Example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let email = `example@example.com`;\nlet matches = app.utilFunctions.emailValidator(email)\n")),Object(i.a)("hr",null),Object(i.a)("h2",{id:"mobilenumvalidator"},"mobileNumValidator"),Object(i.a)("p",null,"This method validates the given string is a valid mobile number or not.\nThen it returns the matched mobile number as an array otherwise it\nreturns an empty array."),Object(i.a)("h3",{id:"syntax-1"},"Syntax"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"app.utilFunctions.mobileNumValidator(mobile)\n")),Object(i.a)("h3",{id:"parameters-1"},"Parameters"),Object(i.a)("h4",{id:"mobile-string"},"mobile","|"," ",Object(i.a)("inlineCode",{parentName:"h4"},"string")),Object(i.a)("p",null,"A string to test it contains any valid mobile numbers"),Object(i.a)("h4",{id:"example-3"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"9876543210\n")),Object(i.a)("h3",{id:"return-value--array-1"},"Return Value ","|"," ",Object(i.a)("inlineCode",{parentName:"h3"},"array")),Object(i.a)("p",null,"If a valid mobile number is present it returns the matched number as an\narray otherwise it returns an empty array."),Object(i.a)("h4",{id:"example-4"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'[\n  "9876543210"\n]\nor\n[] //if mobile number is not matched\n')),Object(i.a)("h3",{id:"example-5"},"Example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let mobile = '9839874325'; //[6-9]XXXXXXXXX, 091[6-9]XXXXXXXXX, 091-[6-9]XXXXXXXXX\nlet matches = app.utilFunctions.mobileNumValidator(mobile);\n")),Object(i.a)("hr",null),Object(i.a)("h2",{id:"pincodevalidator"},"pinCodeValidator"),Object(i.a)("p",null,"This method validates the given string is a valid mobile number or not.\nThen it returns the matched mobile number as an array otherwise it\nreturns an empty array."),Object(i.a)("h3",{id:"syntax-2"},"Syntax"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"app.utilFunctions.pinCodeValidator(pincode)\n")),Object(i.a)("h3",{id:"parameters-2"},"Parameters"),Object(i.a)("h4",{id:"pincode--string"},"pincode ","|"," ",Object(i.a)("inlineCode",{parentName:"h4"},"string")),Object(i.a)("p",null,"A string to test whether it is valid Pincode or not"),Object(i.a)("h4",{id:"example-6"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),"516390\n")),Object(i.a)("h3",{id:"return-value--array-2"},"Return Value ","|"," ",Object(i.a)("inlineCode",{parentName:"h3"},"array")),Object(i.a)("p",null,"If a valid Pincode is present it returns the matched Pincode as an array\notherwise it returns an empty array."),Object(i.a)("h4",{id:"example-7"},"example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-text"}),'[\n  "516390"\n]\nor\n[] //if pincode number is not matched\n')),Object(i.a)("h3",{id:"example-8"},"Example"),Object(i.a)("pre",null,Object(i.a)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"let pincode = '516390';\nlet matches = app.utilFunctions.pinCodeValidator(pincode);\n")),Object(i.a)("hr",null))}u.isMDXComponent=!0}}]);